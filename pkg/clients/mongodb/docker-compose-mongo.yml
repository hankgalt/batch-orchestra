# MongoDB Replica Set with 3 nodes and admin users
services:
  mongo:
    image: mongo:8.0
    container_name: mongo
    restart: unless-stopped
    env_file:
      - mongo.env
    volumes:
      - mongo-data:/data/db
      - ./mongo-keyfile:/opt/keyfile/mongo-keyfile
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --eval 'rs.status().ok' | grep 1"]
      interval: 10s
      start_period: 30s
    command: ["mongod", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip", "localhost,mongo", "--auth",  "--keyFile", "/opt/keyfile/mongo-keyfile"]
    networks:
      schenet:
    
  mongo-rep1:
    image: mongo:8.0
    container_name: mongo-rep1
    restart: unless-stopped
    env_file:
      - mongo.env
    volumes:
      - mongo-rep1-data:/data/db
      - ./mongo-keyfile:/opt/keyfile/mongo-keyfile
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --eval 'rs.status().ok' | grep 1"]
      interval: 10s
      start_period: 30s
    command: ["mongod", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip", "localhost,mongo-rep1", "--auth",  "--keyFile", "/opt/keyfile/mongo-keyfile"]
    networks:
      schenet:

  mongo-rep2:
    image: mongo:8.0
    container_name: mongo-rep2
    restart: unless-stopped
    env_file:
      - mongo.env
    volumes:
      - mongo-rep2-data:/data/db
      - ./mongo-keyfile:/opt/keyfile/mongo-keyfile
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --eval 'rs.status().ok' | grep 1"]
      interval: 10s
      start_period: 30s
    command: ["mongod", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip", "localhost,mongo-rep2", "--auth",  "--keyFile", "/opt/keyfile/mongo-keyfile"]
    networks:
      schenet:

  mongo-setup:
    image: mongo:8.0
    container_name: mongo-setup
    depends_on:
      - mongo
      - mongo-rep1
      - mongo-rep2
    env_file:
      - mongo.env
    entrypoint: ["bash", "/scripts/mongo_setup.sh"]
    volumes:
      - ./mongo-setup.sh:/scripts/mongo_setup.sh:ro
    networks:
      schenet:

networks:
  schenet:
    external: true

volumes:
  mongo-data:
  mongo-rep1-data:
  mongo-rep2-data:

